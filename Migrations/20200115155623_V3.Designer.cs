// <auto-generated />
using System;
using BillBucket.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BillBucket.Migrations
{
    [DbContext(typeof(BillBucketContext))]
    [Migration("20200115155623_V3")]
    partial class V3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillBucket.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoSiret")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("NoTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d6f9c4b-ac89-4d30-9a57-459bb0d58c38"),
                            Adresse = "265 RUE PIERRE JEAN-BAPTISTE 59002 Lille",
                            Mail = "societeproxiad@proxiad.fr",
                            NoSiret = "A127EBHYULIDU1",
                            NoTel = "0322387458",
                            Nom = "Proxiad"
                        });
                });

            modelBuilder.Entity("BillBucket.Models.Commande", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdFacture")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPrestation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<Guid?>("PrestationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FactureId");

                    b.HasIndex("PrestationId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("BillBucket.Models.Facture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReglement")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid>("IdClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NoFacture")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("Factures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("26313c30-9b39-4b51-889e-44658a0aa309"),
                            DateEmission = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2000),
                            DateReglement = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2007),
                            Description = "Achat de deux esclaves chez IB Formation",
                            IdClient = new Guid("1d6f9c4b-ac89-4d30-9a57-459bb0d58c38"),
                            NoFacture = 1
                        });
                });

            modelBuilder.Entity("BillBucket.Models.Prestation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prestations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7541e59d-a5ea-4267-85f3-ec8db35f34cd"),
                            Description = "Nous dressons vos poulets d'entreprises. Ils ressortiront de chez nous en sachant abboyer, danser la polka et remplir vos fonctions de RH",
                            Nom = "Dressage de poulet"
                        },
                        new
                        {
                            Id = new Guid("ee380eb7-1a71-43c5-b01d-e7a8950e2314"),
                            Description = "Nous vous fournissons l'élite des tireurs pour éliminer les forces de recrutement concurrentes. Pas cher du tout pour la qualité de la prestation",
                            Nom = "Location de chasseurs de prime"
                        });
                });

            modelBuilder.Entity("BillBucket.Models.Commande", b =>
                {
                    b.HasOne("BillBucket.Models.Facture", "Facture")
                        .WithMany("Commandes")
                        .HasForeignKey("FactureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BillBucket.Models.Prestation", "Prestation")
                        .WithMany("Commandes")
                        .HasForeignKey("PrestationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BillBucket.Models.Facture", b =>
                {
                    b.HasOne("BillBucket.Models.Client", "Client")
                        .WithMany("Factures")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
